import sys

input = sys.stdin.readline

N, M = map(int, input().split())
nums = [list(map(int, input().split())) for _ in range(N)]

tetrominos = [ # (dy, dx)
    [(0, 0), (0, 1), (0, 2), (0, 3)], # ㅡ
    [(0, 0), (1, 0), (2, 0), (3, 0)], # ㅣ
    [(0, 0), (0, 1), (1, 0), (1, 1)], # ㅁ
    [(0, 0), (1, 0), (2, 0), (2, 1)], # L
    [(0, 0), (1, 0), (0, 1), (0, 2)], # L + 90도
    [(0, 0), (0, 1), (1, 1), (2, 1)], # L + 180도
    [(0, 0), (0, 1), (0, 2), (-1, 2)], # L + 270도
    [(0, 0), (0, 1), (-1, 1), (-2, 1)], # L 대칭
    [(0, 0), (1, 0), (1, 1), (1, 2)], # L 대칭 + 90도
    [(0, 0), (0, 1), (1, 0), (2, 0)], # L자 대칭 + 180도 
    [(0, 0), (0, 1), (0, 2), (1, 2)], # L자 대칭 + 270도
    [(0, 0), (1, 0), (1, 1), (2, 1)], # ㄴㄱ 
    [(0, 0), (0, 1), (-1, 1), (-1, 2)], # ㄴㄱ + 90도
    [(0, 0), (-1, 0), (-1, 1), (-2, 1)], #ㄴㄱ 대칭
    [(0, 0), (0, 1), (1, 1), (1, 2)], #ㄴㄱ대칭 + 90도
    [(0, 0), (0, 1), (0, 2), (1, 1)], # ㅜ
    [(0, 0), (0, 1), (1, 1), (-1, 1)], # ㅜ + 90도
    [(0, 0), (0, 1), (0, 2), (-1, 1)], # ㅜ + 180도
    [(0, 0), (-1, 0), (1, 0), (0, 1)], # ㅜ + 270도
]

max_sum = 0
for i in range(N):
    for j in range(M):
        for tetromino in tetrominos:
            tmp_sum = 0
            for dy, dx in tetromino:
                if 0 <= i + dy < N and 0 <= j + dx < M:
                    tmp_sum += nums[i+dy][j+dx]
                else:
                    tmp_sum = 0
                    break
            max_sum = max(tmp_sum, max_sum)
            
print(max_sum)